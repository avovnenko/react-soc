{"ast":null,"code":"import _objectSpread from \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { authMe } from \"./authReducer\";\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED-SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return _objectSpread({}, state, {\n        initialized: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initializeApp = () => dispatch => {\n  let promises = dispatch(authMe());\n  Promise.all([promises]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/redux/appReducer.js"],"names":["authMe","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promises","Promise","all","then"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,eAArB;AAEA,MAAMC,mBAAmB,GAAG,yBAA5B;AAEA,IAAIC,YAAY,GAAG;AAClBC,EAAAA,WAAW,EAAE;AADK,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,mBAAL;AACC,+BACII,KADJ;AAECF,QAAAA,WAAW,EAAE;AAFd;;AAID;AACC,aAAOE,KAAP;AAPF;AASA,CAVD;;AAYA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AAACD,EAAAA,IAAI,EAAEN;AAAP,CAAP,CAA3B;AAEP,OAAO,MAAMQ,aAAa,GAAG,MAC3BC,QAAD,IAAc;AACb,MAAIC,QAAQ,GAAGD,QAAQ,CAACV,MAAM,EAAP,CAAvB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,QAAD,CAAZ,EACEG,IADF,CACO,MAAM;AACXJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACA,GAHF;AAIA,CAPK;AASP,eAAeJ,UAAf","sourcesContent":["import {authMe} from \"./authReducer\";\n\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED-SUCCESS';\n\nlet initialState = {\n\tinitialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase INITIALIZED_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinitialized: true\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () =>\n\t(dispatch) => {\n\t\tlet promises = dispatch(authMe());\n\t\tPromise.all([promises])\n\t\t\t.then(() => {\n\t\t\t\tdispatch(initializedSuccess());\n\t\t\t})\n\t};\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}