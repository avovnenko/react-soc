{"ast":null,"code":"import _defineProperty from \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_INITIALISED = 'SET-USER-DATA';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIALISED:\n      return _objectSpread({}, state, {\n        initialized: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n});\nexport default appReducer;","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/redux/appReducer.js"],"names":["authAPI","stopSubmit","SET_INITIALISED","initialState","initialized","appReducer","state","action","type","setAuthUserData","userId","email","login","isAuth","SET_USER_DATA","payload"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,YAAtB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,MAAMC,eAAe,GAAG,eAAxB;AAEA,IAAIC,YAAY,GAAG;AAClBC,EAAAA,WAAW,EAAE;AADK,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAEpD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,eAAL;AACC,+BACII,KADJ;AAECF,QAAAA,WAAW,EAAE;AAFd;;AAID;AACC,aAAOE,KAAP;AAPF;AASA,CAXD;;AAaA,OAAO,MAAMG,eAAe,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,MAAmC;AAACL,EAAAA,IAAI,EAAEM,aAAP;AAAsBC,EAAAA,OAAO,EAAE;AAACL,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB;AAA/B,CAAnC,CAAxB;AAGP,eAAeR,UAAf","sourcesContent":["import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_INITIALISED = 'SET-USER-DATA';\n\nlet initialState = {\n\tinitialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n\n\tswitch (action.type) {\n\t\tcase SET_INITIALISED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinitialized: true\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}