{"ast":null,"code":"var _jsxFileName = \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/LoginContainer\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    let componentsDialogs = () => React.createElement(DialogsContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }),\n        componentsProfile = () => React.createElement(ProfileContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }),\n        componentsUsers = () => React.createElement(UsersContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n\n    if (!this.props.initialized) {\n      return React.createElement(Preloader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"app-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(HeaderContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-wrapper-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: `/news`,\n        component: News,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: `/users`,\n        render: componentsUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: `/dialogs`,\n        render: componentsDialogs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: `/profile/:userId?`,\n        render: componentsProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: `/login`,\n        render: () => React.createElement(LoginPage, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  initialized: state.app.initialized\n});\n\nlet AppContainer = compose(withRouter, connect(mapStateToProps, {\n  initializeApp\n}))(App);\n\nlet MainApp = props => {};","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/App.js"],"names":["React","Component","Navbar","News","DialogsContainer","Route","withRouter","UsersContainer","ProfileContainer","HeaderContainer","LoginPage","connect","compose","initializeApp","Preloader","App","componentDidMount","props","render","componentsDialogs","componentsProfile","componentsUsers","initialized","mapStateToProps","state","app","AppContainer","MainApp"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,SAAQC,KAAR,EAAeC,UAAf,QAAgC,kBAAhC;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAOC,SAAP,MAAsB,yCAAtB;;AAEA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAC3Be,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWJ,aAAX;AACA;;AAEDK,EAAAA,MAAM,GAAG;AACR,QAAIC,iBAAiB,GAAG,MAAM,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B;AAAA,QAECC,iBAAiB,GAAG,MAAM,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF3B;AAAA,QAICC,eAAe,GAAG,MAAM,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJzB;;AAMA,QAAI,CAAC,KAAKJ,KAAL,CAAWK,WAAhB,EAA6B;AAC5B,aAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA,KAFD,MAEO;AACN,aACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAIC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJD,EAMC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,OAAd;AAAsB,QAAA,SAAS,EAAEnB,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAIC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,QAAd;AAAuB,QAAA,MAAM,EAAEkB,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJD,EAMC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,UAAd;AAAyB,QAAA,MAAM,EAAEF,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,EAQC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,mBAAd;AAAkC,QAAA,MAAM,EAAEC,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARD,EAUC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,QAAd;AAAuB,QAAA,MAAM,EAAE,MAAM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVD,CAND,CADD;AAqBA;AACD;;AArC0B;;AAwC5B,MAAMG,eAAe,GAAIC,KAAD,KAAY;AACnCF,EAAAA,WAAW,EAAEE,KAAK,CAACC,GAAN,CAAUH;AADY,CAAZ,CAAxB;;AAMA,IAAII,YAAY,GAAGd,OAAO,CACzBN,UADyB,EAEzBK,OAAO,CAACY,eAAD,EAAkB;AAACV,EAAAA;AAAD,CAAlB,CAFkB,CAAP,CAGjBE,GAHiB,CAAnB;;AAMA,IAAIY,OAAO,GAAIV,KAAD,IAAW,CAExB,CAFD","sourcesContent":["import React, {Component} from 'react';\n\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {Route, withRouter} from \"react-router-dom\"\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/LoginContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.initializeApp();\n\t}\n\n\trender() {\n\t\tlet componentsDialogs = () => <DialogsContainer/>,\n\n\t\t\tcomponentsProfile = () => <ProfileContainer/>,\n\n\t\t\tcomponentsUsers = () => <UsersContainer/>;\n\n\t\tif (!this.props.initialized) {\n\t\t\treturn <Preloader/>\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className='app-wrapper'>\n\n\t\t\t\t\t<HeaderContainer/>\n\n\t\t\t\t\t<Navbar/>\n\n\t\t\t\t\t<div className='app-wrapper-content'>\n\n\t\t\t\t\t\t<Route path={`/news`} component={News}/>\n\n\t\t\t\t\t\t<Route path={`/users`} render={componentsUsers}/>\n\n\t\t\t\t\t\t<Route path={`/dialogs`} render={componentsDialogs}/>\n\n\t\t\t\t\t\t<Route path={`/profile/:userId?`} render={componentsProfile}/>\n\n\t\t\t\t\t\t<Route path={`/login`} render={() => <LoginPage/>}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tinitialized: state.app.initialized\n});\n\n\n\nlet AppContainer = compose(\n\twithRouter,\n\tconnect(mapStateToProps, {initializeApp})\n)(App);\n\n\nlet MainApp = (props) => {\n\n};\n\n\n"]},"metadata":{},"sourceType":"module"}