{"ast":null,"code":"// export const addPost = () => {\n//\n// };\n// export const updateNewPostText = (newText) => {\n//\n// };\n//\n// export const subscribe = (observer) => {\n//\n// };\nconst ADD_POST = 'ADD-POST',\n      UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        name: 'Anton',\n        status: 'Coco',\n        message: 'Hello Natasha!',\n        likesCount: '10'\n      }, {\n        id: 2,\n        name: 'Natasha',\n        status: 'Coco',\n        message: 'Hello Coco!',\n        likesCount: '15'\n      }, {\n        id: 3,\n        name: 'Masik',\n        status: 'Dog',\n        message: 'Meow!',\n        likesCount: '999'\n      }, {\n        id: 3,\n        name: 'NewCat',\n        status: 'Dog',\n        message: 'Meow, blyat!',\n        likesCount: '1'\n      }],\n      newPostText: 'Hello Redux'\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hello'\n      }, {\n        id: 2,\n        message: 'Hello, how are you?'\n      }, {\n        id: 3,\n        message: 'Good'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Anton'\n      }, {\n        id: 2,\n        name: 'Natasha'\n      }, {\n        id: 3,\n        name: 'Masik'\n      }],\n      newMessageBody: ''\n    },\n    sidebar: {\n      friends: [{\n        id: 1,\n        name: 'Anton',\n        url: 'https://www.picmonkey.com/blog/wp-content/uploads/2016/11/1-intro-photo-final.jpg'\n      }, {\n        id: 2,\n        name: 'Natasha',\n        url: 'https://content-static.upwork.com/blog/uploads/sites/4/2014/10/27173913/BLOG-Upwork-profile-photo-face.png'\n      }, {\n        id: 3,\n        name: 'Masik',\n        url: 'https://external-preview.redd.it/w4OHuxBN_rhoieORy0LabFzJ4rB837GmYlqp1P2Q5h8.jpg?auto=webp&s=e48b59100278a43bb318b6d35c0d3298e355cee0'\n      }]\n    }\n  },\n\n  _callSubscriber() {\n    console.log('state was changed');\n  },\n\n  get getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  _updateNewPostText(newText) {\n    this._state.profilePage.newPostText = newText;\n\n    this._callSubscriber(this._state);\n  },\n\n  _updateNewMessageText(newMessage) {\n    this._state.dialogsPage.newMessageBody = newMessage;\n\n    this._callSubscriber(this._state);\n  },\n\n  _addPost() {\n    let newPost = {\n      id: 5,\n      name: 'Anonymus',\n      status: 'noname',\n      message: this._state.profilePage.newPostText,\n      likesCount: 0\n    };\n\n    this._state.profilePage.posts.push(newPost);\n\n    this._state.profilePage.newPostText = '';\n\n    this._callSubscriber(this._state);\n  },\n\n  _addMessage() {\n    let newMessage = {\n      id: 4,\n      message: this._state.dialogsPage.newMessageBody\n    };\n\n    this._state.dialogsPage.messages.push(newMessage);\n\n    this._state.dialogsPage.messages = '';\n\n    this._callSubscriber(this._state);\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      this._addPost();\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._updateNewPostText(action.newText);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._updateNewMessageText(action.newMessageBody);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state;\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/redux/state.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","posts","id","name","status","message","likesCount","newPostText","dialogsPage","messages","dialogs","newMessageBody","sidebar","friends","url","_callSubscriber","console","log","getState","subscribe","observer","_updateNewPostText","newText","_updateNewMessageText","newMessage","_addPost","newPost","push","_addMessage","dispatch","action","type","body","addPostActionCreator","updateNewPostTextActionCreator","text","window"],"mappings":"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","sourcesContent":["// export const addPost = () => {\n//\n// };\n// export const updateNewPostText = (newText) => {\n//\n// };\n//\n// export const subscribe = (observer) => {\n//\n// };\n\nconst ADD_POST = 'ADD-POST',\n\t  UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet store = {\n\t_state: {\n\t\tprofilePage: {\n\t\t\tposts: [\n\t\t\t\t{id: 1, name: 'Anton', status: 'Coco', message: 'Hello Natasha!', likesCount: '10'},\n\t\t\t\t{id: 2, name: 'Natasha', status: 'Coco', message: 'Hello Coco!', likesCount: '15'},\n\t\t\t\t{id: 3, name: 'Masik', status: 'Dog', message: 'Meow!', likesCount: '999'},\n\t\t\t\t{id: 3, name: 'NewCat', status: 'Dog', message: 'Meow, blyat!', likesCount: '1'}\n\t\t\t],\n\t\t\tnewPostText: 'Hello Redux'\n\t\t},\n\t\tdialogsPage: {\n\t\t\tmessages: [\n\t\t\t\t{id: 1, message: 'Hello'},\n\t\t\t\t{id: 2, message: 'Hello, how are you?'},\n\t\t\t\t{id: 3, message: 'Good'}\n\t\t\t],\n\t\t\tdialogs: [\n\t\t\t\t{id: 1, name: 'Anton'},\n\t\t\t\t{id: 2, name: 'Natasha'},\n\t\t\t\t{id: 3, name: 'Masik'}\n\t\t\t],\n\t\t\tnewMessageBody: ''\n\t\t},\n\t\tsidebar: {\n\t\t\tfriends: [\n\t\t\t\t{id: 1, name: 'Anton', url: 'https://www.picmonkey.com/blog/wp-content/uploads/2016/11/1-intro-photo-final.jpg'},\n\t\t\t\t{id: 2, name: 'Natasha', url: 'https://content-static.upwork.com/blog/uploads/sites/4/2014/10/27173913/BLOG-Upwork-profile-photo-face.png'},\n\t\t\t\t{id: 3, name: 'Masik', url: 'https://external-preview.redd.it/w4OHuxBN_rhoieORy0LabFzJ4rB837GmYlqp1P2Q5h8.jpg?auto=webp&s=e48b59100278a43bb318b6d35c0d3298e355cee0'}\n\t\t\t]\n\t\t}\n\t},\n\t_callSubscriber() {\n\t\tconsole.log('state was changed');\n\t},\n\n\tget getState() {\n\t\treturn this._state;\n\t},\n\tsubscribe(observer) {\n\t\tthis._callSubscriber = observer;\n\t},\n\n\t_updateNewPostText(newText) {\n\t\tthis._state.profilePage.newPostText = newText;\n\t\tthis._callSubscriber(this._state);\n\t},\n\t_updateNewMessageText(newMessage) {\n\t\tthis._state.dialogsPage.newMessageBody = newMessage;\n\t\tthis._callSubscriber(this._state);\n\t},\n\t_addPost() {\n\t\tlet newPost = {\n\t\t\tid: 5,\n\t\t\tname: 'Anonymus',\n\t\t\tstatus: 'noname',\n\t\t\tmessage: this._state.profilePage.newPostText,\n\t\t\tlikesCount: 0\n\t\t};\n\t\tthis._state.profilePage.posts.push(newPost);\n\t\tthis._state.profilePage.newPostText = '';\n\t\tthis._callSubscriber(this._state);\n\t},\n\t_addMessage() {\n\t\tlet newMessage = {\n\t\t\tid: 4,\n\t\t\tmessage: this._state.dialogsPage.newMessageBody\n\t\t}\n\t\tthis._state.dialogsPage.messages.push(newMessage)\n\t\tthis._state.dialogsPage.messages = '';\n\t\tthis._callSubscriber(this._state)\n\t},\n\n\tdispatch(action) {\n\t\tif (action.type === ADD_POST) {\n\t\t\tthis._addPost();\n\t\t} else if (action.type === UPDATE_NEW_POST_TEXT) {\n\t\t\tthis._updateNewPostText(action.newText);\n\t\t} else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n\t\t\tthis._updateNewMessageText(action.newMessageBody);\n\t\t} else if (action.type === SEND_MESSAGE) {\n\t\t\tlet body = this._state\n\t\t}\n\t}\n};\n\nexport const addPostActionCreator = () => ({ type: ADD_POST });\nexport const updateNewPostTextActionCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text });\n\nwindow.store = store;\n\nexport default store;"]},"metadata":{},"sourceType":"module"}