{"ast":null,"code":"var _jsxFileName = \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/components/Login/LoginContainer.jsx\";\nimport React from 'react';\nimport Login from \"./Login\";\nimport { connect } from \"react-redux\";\nimport { userLogin } from \"../../redux/authReducer\";\nimport { Redirect } from \"react-router-dom\";\n\nclass LoginContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogin = (email, password, rememberMe, captcha) => {\n      this.props.userLogin(email, password, rememberMe, captcha);\n    };\n  }\n\n  render() {\n    if (this.props.isAuth) return React.createElement(Redirect, {\n      to: '/profile',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });else return React.createElement(Login, Object.assign({}, this.props, {\n      onLogin: this.onLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nconst mapDispatchToProps = {\n  userLogin\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/components/Login/LoginContainer.jsx"],"names":["React","Login","connect","userLogin","Redirect","LoginContainer","Component","onLogin","email","password","rememberMe","captcha","props","render","isAuth","mapStateToProps","state","auth","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,yBAAxB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAEA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAC5CC,OAD4C,GAClC,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,OAA9B,KAA0C;AACnD,WAAKC,KAAL,CAAWT,SAAX,CAAqBK,KAArB,EAA4BC,QAA5B,EAAsCC,UAAtC,EAAkDC,OAAlD;AACA,KAH2C;AAAA;;AAK5CE,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKD,KAAL,CAAWE,MAAf,EACC,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CADD,KAGC,OAAO,oBAAC,KAAD,oBAAW,KAAKF,KAAhB;AAAuB,MAAA,OAAO,EAAE,KAAKL,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAV2C;;AAa7C,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNF,IAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADb,GAAP;AAGA,CAJD;;AAMA,MAAMI,kBAAkB,GAAG;AAC1Bf,EAAAA;AAD0B,CAA3B;AAIA,eAAeD,OAAO,CAACa,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,cAA7C,CAAf","sourcesContent":["import React from 'react';\nimport Login from \"./Login\";\nimport {connect} from \"react-redux\";\nimport {userLogin} from \"../../redux/authReducer\";\nimport {Redirect} from \"react-router-dom\";\n\nclass LoginContainer extends React.Component {\n\tonLogin = (email, password, rememberMe, captcha) => {\n\t\tthis.props.userLogin(email, password, rememberMe, captcha);\n\t};\n\n\trender() {\n\t\tif (this.props.isAuth)\n\t\t\treturn <Redirect to={'/profile'} />;\n\t\telse\n\t\t\treturn <Login {...this.props} onLogin={this.onLogin} />\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisAuth: state.auth.isAuth\n\t}\n};\n\nconst mapDispatchToProps = {\n\tuserLogin\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);"]},"metadata":{},"sourceType":"module"}