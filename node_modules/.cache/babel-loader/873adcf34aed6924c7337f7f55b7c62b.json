{"ast":null,"code":"import _slicedToArray from \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx\";\nimport React, { useState } from 'react';\n\nconst ProfileStatusWithHooks = props => {\n  debugger;\n\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  let _useState3 = useState(props.profileStatus),\n      _useState4 = _slicedToArray(_useState3, 2),\n      profileStatus = _useState4[0],\n      changeProfileStatus = _useState4[1];\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(true);\n    props.updateProfileStatus(profileStatus);\n  };\n\n  const statusOnChangeHandle = e => {\n    changeProfileStatus(e.target.value);\n  };\n\n  console.log(editMode);\n  return React.createElement(React.Fragment, null, !editMode ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onDoubleClick: activateEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.profileStatus || '------')), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    autoFocus: true,\n    onBlur: deactivateEditMode,\n    onChange: e => {\n      statusOnChangeHandle(e);\n    },\n    value: profileStatus ? profileStatus : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))) : '', editMode ? React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\") : '');\n};\n\nexport default ProfileStatusWithHooks;","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx"],"names":["React","useState","ProfileStatusWithHooks","props","editMode","setEditMode","profileStatus","changeProfileStatus","activateEditMode","deactivateEditMode","updateProfileStatus","statusOnChangeHandle","e","target","value","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAEzC;;AAFyC,kBAIXF,QAAQ,CAAC,KAAD,CAJG;AAAA;AAAA,MAIpCG,QAJoC;AAAA,MAI1BC,WAJ0B;;AAAA,mBAKEJ,QAAQ,CAACE,KAAK,CAACG,aAAP,CALV;AAAA;AAAA,MAKpCA,aALoC;AAAA,MAKrBC,mBALqB;;AAOzC,QAAMC,gBAAgB,GAAG,MAAM;AAC9BH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,GAFD;;AAGA,QAAMI,kBAAkB,GAAG,MAAM;AAChCJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,IAAAA,KAAK,CAACO,mBAAN,CAA0BJ,aAA1B;AACA,GAHD;;AAIA,QAAMK,oBAAoB,GAAIC,CAAD,IAAO;AACnCL,IAAAA,mBAAmB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AACA,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AAEA,SACC,0CACG,CAACA,QAAD,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,aAAa,EAAGI,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CL,KAAK,CAACG,aAAN,IAAuB,QAAjE,CAAL,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAO,IAAA,SAAS,EAAE,IAAlB;AAAwB,IAAA,MAAM,EAAGG,kBAAjC;AAAuD,IAAA,QAAQ,EAAIG,CAAD,IAAO;AAACD,MAAAA,oBAAoB,CAACC,CAAD,CAApB;AAAwB,KAAlG;AAAqG,IAAA,KAAK,EAAEN,aAAa,GAAGA,aAAH,GAAmB,EAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAFD,CADC,GAIQ,EALX,EAOGF,QAAQ,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGADS,GAC2B,EARtC,CADD;AAaA,CAjCD;;AAmCA,eAAeF,sBAAf","sourcesContent":["import React, { useState } from 'react';\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n\tdebugger;\n\n\tlet [editMode, setEditMode] = useState(false);\n\tlet [profileStatus, changeProfileStatus] = useState(props.profileStatus);\n\n\tconst activateEditMode = () => {\n\t\tsetEditMode(true);\n\t};\n\tconst deactivateEditMode = () => {\n\t\tsetEditMode(true);\n\t\tprops.updateProfileStatus(profileStatus);\n\t};\n\tconst statusOnChangeHandle = (e) => {\n\t\tchangeProfileStatus(e.target.value);\n\t};\n\n\tconsole.log(editMode);\n\n\treturn (\n\t\t<>\n\t\t\t{ !editMode ?\n\t\t\t\t<div>\n\t\t\t\t\t<div><span onDoubleClick={ activateEditMode }>{props.profileStatus || '------'}</span></div>\n\t\t\t\t\t<div><input autoFocus={true} onBlur={ deactivateEditMode }  onChange={ (e) => {statusOnChangeHandle(e)} } value={profileStatus ? profileStatus : ''}/></div>\n\t\t\t\t</div> : ''\n\t\t\t}\n\t\t\t{ editMode ?\n\t\t\t\t<button>Поставить Статус</button> : ''\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default ProfileStatusWithHooks;"]},"metadata":{},"sourceType":"module"}