{"ast":null,"code":"var _jsxFileName = \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport { getUserProfile } from \"../../redux/profileReducer\";\nimport { withRouter } from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/AuthRedirect/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport withPreloader from \"../../hoc/Preloader/withPreloader\";\n\nclass ProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = 5518;\n    }\n\n    this.props.getUserProfile(userId);\n  }\n\n  render() {\n    return React.createElement(Profile, Object.assign({\n      isLoading: this.state.loading\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile\n  };\n};\n\nlet mapDispatchToProps = {\n  getUserProfile\n};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withRouter, withPreloader, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/components/Profile/ProfileContainer.jsx"],"names":["React","connect","Profile","getUserProfile","withRouter","withAuthRedirect","compose","withPreloader","ProfileContainer","Component","state","loading","componentDidMount","setState","userId","props","match","params","render","mapStateToProps","profile","profilePage","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,cAAR,QAA6B,4BAA7B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAKA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC9CC,KAD8C,GACtC;AACPC,MAAAA,OAAO,EAAE;AADF,KADsC;AAAA;;AAK9CC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAd;AAEA,QAAIG,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACZA,MAAAA,MAAM,GAAG,IAAT;AACA;;AACD,SAAKC,KAAL,CAAWZ,cAAX,CAA0BW,MAA1B;AACA;;AAEDI,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,KAAKR,KAAL,CAAWC;AAA/B,OAA4C,KAAKI,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD;AAGA;;AAnB6C;;AAsB/C,IAAII,eAAe,GAAIT,KAAD,IAAW;AAChC,SAAO;AACNU,IAAAA,OAAO,EAAEV,KAAK,CAACW,WAAN,CAAkBD;AADrB,GAAP;AAGA,CAJD;;AAKA,IAAIE,kBAAkB,GAAG;AACxBnB,EAAAA;AADwB,CAAzB;AAIA,eAAeG,OAAO,CACrBL,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CADc,EAErBlB,UAFqB,EAGrBG,aAHqB,EAIrBF,gBAJqB,CAAP,CAKbG,gBALa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {getUserProfile} from \"../../redux/profileReducer\";\nimport {withRouter} from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/AuthRedirect/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport withPreloader from \"../../hoc/Preloader/withPreloader\";\n\n\n\n\nclass ProfileContainer extends React.Component {\n\tstate = {\n\t\tloading: false\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({ loading: true });\n\t\t\n\t\tlet userId = this.props.match.params.userId;\n\t\tif (!userId) {\n\t\t\tuserId = 5518;\n\t\t}\n\t\tthis.props.getUserProfile(userId);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Profile isLoading={this.state.loading} {...this.props}/>\n\t\t);\n\t}\n}\n\nlet mapStateToProps = (state) => {\n\treturn {\n\t\tprofile: state.profilePage.profile\n\t}\n};\nlet mapDispatchToProps = {\n\tgetUserProfile\n};\n\nexport default compose(\n\tconnect(mapStateToProps, mapDispatchToProps),\n\twithRouter,\n\twithPreloader,\n\twithAuthRedirect\n)(ProfileContainer);\n\n"]},"metadata":{},"sourceType":"module"}