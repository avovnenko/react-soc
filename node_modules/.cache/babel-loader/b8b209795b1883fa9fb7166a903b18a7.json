{"ast":null,"code":"import _slicedToArray from\"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';var ProfileStatusWithHooks=function ProfileStatusWithHooks(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];var _useState3=useState(props.profileStatus),_useState4=_slicedToArray(_useState3,2),profileStatus=_useState4[0],changeProfileStatus=_useState4[1];var _useState5=useState(profileStatus?false:true),_useState6=_slicedToArray(_useState5,2),isEmpty=_useState6[0],changeIsEmpty=_useState6[1];var activateEditMode=function activateEditMode(){setEditMode(true);changeIsEmpty(false);};var deactivateEditMode=function deactivateEditMode(){setEditMode(false);changeIsEmpty(profileStatus?false:true);props.updateProfileStatus(profileStatus);};var statusOnChangeHandle=function statusOnChangeHandle(e){changeProfileStatus(e.target.value);};useEffect(function(){changeProfileStatus(props.profileStatus);changeIsEmpty(props.profileStatus?false:true);},[props.profileStatus]);return React.createElement(React.Fragment,null,!editMode?React.createElement(\"div\",null,React.createElement(\"span\",{onDoubleClick:activateEditMode},props.profileStatus||'------')):React.createElement(\"div\",null,React.createElement(\"input\",{autoFocus:true,onBlur:deactivateEditMode,onChange:function onChange(e){statusOnChangeHandle(e);},value:profileStatus})),isEmpty?React.createElement(\"button\",{onClick:activateEditMode},\"\\u041F\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"):'');};export default ProfileStatusWithHooks;","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx"],"names":["React","useState","useEffect","ProfileStatusWithHooks","props","editMode","setEditMode","profileStatus","changeProfileStatus","isEmpty","changeIsEmpty","activateEditMode","deactivateEditMode","updateProfileStatus","statusOnChangeHandle","e","target","value"],"mappings":"0LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAGA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAW,eAEXH,QAAQ,CAAC,KAAD,CAFG,wCAEpCI,QAFoC,eAE1BC,WAF0B,8BAGEL,QAAQ,CAACG,KAAK,CAACG,aAAP,CAHV,yCAGpCA,aAHoC,eAGrBC,mBAHqB,8BAIVP,QAAQ,CAACM,aAAa,CAAG,KAAH,CAAW,IAAzB,CAJE,yCAIpCE,OAJoC,eAI3BC,aAJ2B,eAMzC,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC9BL,WAAW,CAAC,IAAD,CAAX,CACAI,aAAa,CAAC,KAAD,CAAb,CACA,CAHD,CAIA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAChCN,WAAW,CAAC,KAAD,CAAX,CACAI,aAAa,CAACH,aAAa,CAAG,KAAH,CAAW,IAAzB,CAAb,CACAH,KAAK,CAACS,mBAAN,CAA0BN,aAA1B,EACA,CAJD,CAKA,GAAMO,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,CAAD,CAAO,CACnCP,mBAAmB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB,CACA,CAFD,CAIAf,SAAS,CAAC,UAAM,CACfM,mBAAmB,CAACJ,KAAK,CAACG,aAAP,CAAnB,CACAG,aAAa,CAACN,KAAK,CAACG,aAAN,CAAsB,KAAtB,CAA8B,IAA/B,CAAb,CACA,CAHQ,CAGN,CAACH,KAAK,CAACG,aAAP,CAHM,CAAT,CAMA,MACC,yCACG,CAACF,QAAD,CACD,+BAAK,4BAAM,aAAa,CAAGM,gBAAtB,EAA0CP,KAAK,CAACG,aAAN,EAAuB,QAAjE,CAAL,CADC,CAGD,+BAAK,6BAAO,SAAS,CAAE,IAAlB,CAAwB,MAAM,CAAGK,kBAAjC,CAAuD,QAAQ,CAAG,kBAACG,CAAD,CAAO,CAACD,oBAAoB,CAACC,CAAD,CAApB,CAAwB,CAAlG,CAAqG,KAAK,CAAER,aAA5G,EAAL,CAJF,CAMGE,OAAO,CACR,8BAAQ,OAAO,CAAGE,gBAAlB,gGADQ,CACyD,EAPnE,CADD,CAYA,CArCD,CAuCA,cAAeR,CAAAA,sBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n\tlet [editMode, setEditMode] = useState(false);\n\tlet [profileStatus, changeProfileStatus] = useState(props.profileStatus);\n\tlet [isEmpty, changeIsEmpty] = useState(profileStatus ? false : true);\n\n\tconst activateEditMode = () => {\n\t\tsetEditMode(true);\n\t\tchangeIsEmpty(false);\n\t};\n\tconst deactivateEditMode = () => {\n\t\tsetEditMode(false);\n\t\tchangeIsEmpty(profileStatus ? false : true);\n\t\tprops.updateProfileStatus(profileStatus);\n\t};\n\tconst statusOnChangeHandle = (e) => {\n\t\tchangeProfileStatus(e.target.value);\n\t};\n\n\tuseEffect(() => {\n\t\tchangeProfileStatus(props.profileStatus);\n\t\tchangeIsEmpty(props.profileStatus ? false : true);\n\t}, [props.profileStatus] );\n\n\n\treturn (\n\t\t<>\n\t\t\t{ !editMode ?\n\t\t\t\t<div><span onDoubleClick={ activateEditMode }>{props.profileStatus || '------'}</span></div>\n\t\t\t\t:\n\t\t\t\t<div><input autoFocus={true} onBlur={ deactivateEditMode }  onChange={ (e) => {statusOnChangeHandle(e)} } value={profileStatus}/></div>\n\t\t\t}\n\t\t\t{ isEmpty ?\n\t\t\t\t<button onClick={ activateEditMode }>Поставить Статус</button> : ''\n\t\t\t}\n\t\t</>\n\t);\n};\n\nexport default ProfileStatusWithHooks;"]},"metadata":{},"sourceType":"module"}