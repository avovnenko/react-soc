{"ast":null,"code":"import _defineProperty from \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SubmissionError } from 'redux-form';\nimport { userLogin } from \"../../redux/authReducer\";\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction submit(values) {\n  console.log(_objectSpread({}, values)); // return userLogin.then((response) => {\n  // simulate server latency\n  // console.log(response);\n  // if (!['john', 'paul', 'george', 'ringo'].includes(values.username)) {\n  // \tthrow new SubmissionError({\n  // \t\tlogin: 'User does not exist',\n  // \t\t_error: 'Login failed!'\n  // \t})\n  // } else if (values.password !== 'redux-form') {\n  // \tthrow new SubmissionError({\n  // \t\tpassword: 'Wrong password',\n  // \t\t_error: 'Login failed!'\n  // \t})\n  // } else {\n  // \twindow.alert(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`)\n  // }\n  // })\n}\n\nexport default submit;","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/utils/validators/asyncLoginSubmitValidate.jsx"],"names":["SubmissionError","userLogin","sleep","ms","Promise","resolve","setTimeout","submit","values","console","log"],"mappings":";;;;;;AAAA,SAAQA,eAAR,QAA8B,YAA9B;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;AAEA,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAApB;;AAEA,SAASI,MAAT,CAAgBC,MAAhB,EAAwB;AACvBC,EAAAA,OAAO,CAACC,GAAR,mBAAgBF,MAAhB,GADuB,CAEvB;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACA;;AAED,eAAeD,MAAf","sourcesContent":["import {SubmissionError} from 'redux-form';\nimport {userLogin} from \"../../redux/authReducer\";\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction submit(values) {\n\tconsole.log({...values});\n\t// return userLogin.then((response) => {\n\t\t// simulate server latency\n\t\t// console.log(response);\n\t\t// if (!['john', 'paul', 'george', 'ringo'].includes(values.username)) {\n\t\t// \tthrow new SubmissionError({\n\t\t// \t\tlogin: 'User does not exist',\n\t\t// \t\t_error: 'Login failed!'\n\t\t// \t})\n\t\t// } else if (values.password !== 'redux-form') {\n\t\t// \tthrow new SubmissionError({\n\t\t// \t\tpassword: 'Wrong password',\n\t\t// \t\t_error: 'Login failed!'\n\t\t// \t})\n\t\t// } else {\n\t\t// \twindow.alert(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`)\n\t\t// }\n\t// })\n}\n\nexport default submit"]},"metadata":{},"sourceType":"module"}