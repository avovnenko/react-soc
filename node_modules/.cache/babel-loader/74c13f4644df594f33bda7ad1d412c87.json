{"ast":null,"code":"import _slicedToArray from \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx\";\nimport React, { useState, useEffect } from 'react';\n\nconst ProfileStatusWithHooks = props => {\n  if (a === b) {\n    let _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        editMode = _useState2[0],\n        setEditMode = _useState2[1];\n  }\n\n  let _useState3 = useState(props.profileStatus),\n      _useState4 = _slicedToArray(_useState3, 2),\n      profileStatus = _useState4[0],\n      changeProfileStatus = _useState4[1];\n\n  let _useState5 = useState(profileStatus ? false : true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isEmpty = _useState6[0],\n      changeIsEmpty = _useState6[1];\n\n  const activateEditMode = () => {\n    setEditMode(true);\n    changeIsEmpty(false);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    changeIsEmpty(profileStatus ? false : true);\n    props.updateProfileStatus(profileStatus);\n  };\n\n  const statusOnChangeHandle = e => {\n    console.log(e.target.value);\n    changeProfileStatus(e.target.value);\n  };\n\n  useEffect(() => {\n    changeProfileStatus(props.profileStatus);\n    changeIsEmpty(props.profileStatus ? false : true);\n  }, [props.profileStatus]);\n  return React.createElement(React.Fragment, null, !editMode ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onDoubleClick: activateEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.profileStatus || '------')) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    autoFocus: true,\n    onBlur: deactivateEditMode,\n    onChange: e => {\n      statusOnChangeHandle(e);\n    },\n    value: profileStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), isEmpty ? React.createElement(\"button\", {\n    onClick: activateEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\") : '');\n};\n\nexport default ProfileStatusWithHooks;","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx"],"names":["React","useState","useEffect","ProfileStatusWithHooks","props","a","b","editMode","setEditMode","profileStatus","changeProfileStatus","isEmpty","changeIsEmpty","activateEditMode","deactivateEditMode","updateProfileStatus","statusOnChangeHandle","e","console","log","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAEzC,MAAIC,CAAC,KAAKC,CAAV,EAAa;AAAA,oBACkBL,QAAQ,CAAC,KAAD,CAD1B;AAAA;AAAA,QACPM,QADO;AAAA,QACGC,WADH;AAEZ;;AAJwC,mBAKEP,QAAQ,CAACG,KAAK,CAACK,aAAP,CALV;AAAA;AAAA,MAKpCA,aALoC;AAAA,MAKrBC,mBALqB;;AAAA,mBAMVT,QAAQ,CAACQ,aAAa,GAAG,KAAH,GAAW,IAAzB,CANE;AAAA;AAAA,MAMpCE,OANoC;AAAA,MAM3BC,aAN2B;;AAQzC,QAAMC,gBAAgB,GAAG,MAAM;AAC9BL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,GAHD;;AAIA,QAAME,kBAAkB,GAAG,MAAM;AAChCN,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAI,IAAAA,aAAa,CAACH,aAAa,GAAG,KAAH,GAAW,IAAzB,CAAb;AACAL,IAAAA,KAAK,CAACW,mBAAN,CAA0BN,aAA1B;AACA,GAJD;;AAKA,QAAMO,oBAAoB,GAAIC,CAAD,IAAO;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACAX,IAAAA,mBAAmB,CAACO,CAAC,CAACG,MAAF,CAASC,KAAV,CAAnB;AACA,GAHD;;AAKAnB,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,mBAAmB,CAACN,KAAK,CAACK,aAAP,CAAnB;AACAG,IAAAA,aAAa,CAACR,KAAK,CAACK,aAAN,GAAsB,KAAtB,GAA8B,IAA/B,CAAb;AACA,GAHQ,EAGN,CAACL,KAAK,CAACK,aAAP,CAHM,CAAT;AAMA,SACC,0CACG,CAACF,QAAD,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,aAAa,EAAGM,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CT,KAAK,CAACK,aAAN,IAAuB,QAAjE,CAAL,CADC,GAGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAO,IAAA,SAAS,EAAE,IAAlB;AAAwB,IAAA,MAAM,EAAGK,kBAAjC;AAAuD,IAAA,QAAQ,EAAIG,CAAD,IAAO;AAACD,MAAAA,oBAAoB,CAACC,CAAD,CAApB;AAAwB,KAAlG;AAAqG,IAAA,KAAK,EAAER,aAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAJF,EAMGE,OAAO,GACR;AAAQ,IAAA,OAAO,EAAGE,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGADQ,GACyD,EAPnE,CADD;AAYA,CAxCD;;AA0CA,eAAeV,sBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n\tif (a === b) {\n\t\tlet [editMode, setEditMode] = useState(false);\n\t}\n\tlet [profileStatus, changeProfileStatus] = useState(props.profileStatus);\n\tlet [isEmpty, changeIsEmpty] = useState(profileStatus ? false : true);\n\n\tconst activateEditMode = () => {\n\t\tsetEditMode(true);\n\t\tchangeIsEmpty(false);\n\t};\n\tconst deactivateEditMode = () => {\n\t\tsetEditMode(false);\n\t\tchangeIsEmpty(profileStatus ? false : true);\n\t\tprops.updateProfileStatus(profileStatus);\n\t};\n\tconst statusOnChangeHandle = (e) => {\n\t\tconsole.log(e.target.value);\n\t\tchangeProfileStatus(e.target.value);\n\t};\n\n\tuseEffect(() => {\n\t\tchangeProfileStatus(props.profileStatus);\n\t\tchangeIsEmpty(props.profileStatus ? false : true);\n\t}, [props.profileStatus] );\n\n\n\treturn (\n\t\t<>\n\t\t\t{ !editMode ?\n\t\t\t\t<div><span onDoubleClick={ activateEditMode }>{props.profileStatus || '------'}</span></div>\n\t\t\t\t:\n\t\t\t\t<div><input autoFocus={true} onBlur={ deactivateEditMode }  onChange={ (e) => {statusOnChangeHandle(e)} } value={profileStatus}/></div>\n\t\t\t}\n\t\t\t{ isEmpty ?\n\t\t\t\t<button onClick={ activateEditMode }>Поставить Статус</button> : ''\n\t\t\t}\n\t\t</>\n\t);\n};\n\nexport default ProfileStatusWithHooks;"]},"metadata":{},"sourceType":"module"}