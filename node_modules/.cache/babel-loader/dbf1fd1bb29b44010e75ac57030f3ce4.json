{"ast":null,"code":"import _defineProperty from \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/components/common/FormsControls/FormsControls.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport s from \"./FormsControls.module.css\";\n\nconst FormControl = (_ref) => {\n  let input = _ref.input,\n      meta = _ref.meta,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"input\", \"meta\", \"children\"]);\n\n  const hasError = meta.touched && meta.error;\n  let newFormElement = React.createElement(element, _objectSpread({}, input, {}, props), '123');\n  return React.createElement(\"div\", {\n    className: s.formControl + ' ' + (hasError ? s.error : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.children, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), hasError && React.createElement(\"span\", {\n    className: s.errorMsg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \" \", meta.error, \" \"));\n};\n\nexport const Textarea = props => {\n  const input = props.input,\n        meta = props.meta,\n        child = props.child,\n        restProps = _objectWithoutProperties(props, [\"input\", \"meta\", \"child\"]);\n\n  return React.createElement(FormControl, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"textarea\", Object.assign({}, input, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n};\nexport const Input = props => {\n  return React.createElement(FormControl, Object.assign({}, props, {\n    element: 'input',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/components/common/FormsControls/FormsControls.js"],"names":["React","s","FormControl","input","meta","children","props","hasError","touched","error","newFormElement","createElement","element","formControl","errorMsg","Textarea","child","restProps","Input"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,4BAAd;;AAEA,MAAMC,WAAW,GAAG,UAAuC;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAXC,KAAW;;AAC1D,QAAMC,QAAQ,GAAGH,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAAtC;AAEA,MAAIC,cAAc,GAAGV,KAAK,CAACW,aAAN,CAAoBC,OAApB,oBAAiCT,KAAjC,MAA2CG,KAA3C,GAAmD,KAAnD,CAArB;AAEA,SACC;AAAK,IAAA,SAAS,EAAEL,CAAC,CAACY,WAAF,GAAgB,GAAhB,IAAuBN,QAAQ,GAAGN,CAAC,CAACQ,KAAL,GAAa,EAA5C,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,KAAK,CAACD,QADR,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGGE,QAAQ,IAAI;AAAM,IAAA,SAAS,EAAEN,CAAC,CAACa,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA+BV,IAAI,CAACK,KAApC,MAHf,CADD;AAOA,CAZD;;AAcA,OAAO,MAAMM,QAAQ,GAAIT,KAAD,IAAW;AAAA,QAC3BH,KAD2B,GACSG,KADT,CAC3BH,KAD2B;AAAA,QACpBC,IADoB,GACSE,KADT,CACpBF,IADoB;AAAA,QACdY,KADc,GACSV,KADT,CACdU,KADc;AAAA,QACJC,SADI,4BACSX,KADT;;AAElC,SAAO,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAwB,kDAAcH,KAAd,EAAyBc,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB,CAAP;AACA,CAHM;AAIP,OAAO,MAAMC,KAAK,GAAIZ,KAAD,IAAW;AAC/B,SAAO,oBAAC,WAAD,oBAAiBA,KAAjB;AAAwB,IAAA,OAAO,EAAE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACA,CAFM","sourcesContent":["import React from \"react\";\nimport s from \"./FormsControls.module.css\";\n\nconst FormControl = ({input, meta, children, ...props}) => {\n\tconst hasError = meta.touched && meta.error;\n\n\tlet newFormElement = React.createElement(element, {...input, ...props}, '123');\n\n\treturn (\n\t\t<div className={s.formControl + ' ' + (hasError ? s.error : '')}>\n\t\t\t{props.children}\n\t\t\t<br/>\n\t\t\t{ hasError && <span className={s.errorMsg}> {meta.error} </span> }\n\t\t</div>\n\t);\n};\n\nexport const Textarea = (props) => {\n\tconst {input, meta, child, ...restProps} = props;\n\treturn <FormControl {...props}><textarea {...input} {...restProps}></textarea></FormControl>;\n};\nexport const Input = (props) => {\n\treturn <FormControl {...props} element={'input'}></FormControl>;\n};"]},"metadata":{},"sourceType":"module"}