{"ast":null,"code":"import _defineProperty from \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { profileAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST',\n      SET_USER_PROFILE = 'SET-USER-PROFILE',\n      SET_USER_PROFILE_STATUS = 'SET-USER-PROFILE-STATUS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    name: 'Anton',\n    status: 'Coco',\n    message: 'Hello Natasha!',\n    likesCount: '10'\n  }, {\n    id: 2,\n    name: 'Natasha',\n    status: 'Coco',\n    message: 'Hello Coco!',\n    likesCount: '15'\n  }, {\n    id: 3,\n    name: 'Masik',\n    status: 'Dog',\n    message: 'Meow!',\n    likesCount: '999'\n  }, {\n    id: 4,\n    name: 'NewCat',\n    status: 'Dog',\n    message: 'Meow, blyat!',\n    likesCount: '1'\n  }],\n  profile: null,\n  profileStatus: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: state.posts[state.posts.length - 1].id + 1,\n        name: 'Anonymus',\n        status: 'noname',\n        message: action.newPostText,\n        likesCount: 0\n      };\n      return _objectSpread({}, state, {\n        posts: [...state.posts, newPost]\n      });\n\n    case SET_USER_PROFILE:\n      return _objectSpread({}, state, {\n        profile: action.profile\n      });\n\n    case SET_USER_PROFILE_STATUS:\n      return _objectSpread({}, state, {\n        profileStatus: action.profileStatus\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;\nexport const addPost = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserProfileStatus = profileStatus => ({\n  type: SET_USER_PROFILE_STATUS,\n  profileStatus\n});\nexport const getUserProfile = userId => async dispatch => {\n  let response = await profileAPI.getUserProfile(userId);\n  dispatch(setUserProfile(response));\n  let responseStatus = await profileAPI.getUserProfileStatus(userId);\n  dispatch(setUserProfileStatus(responseStatus));\n};\nexport const getUserProfileStatus = userId => async dispatch => {\n  let response = await profileAPI.getUserProfileStatus(userId);\n  dispatch(setUserProfileStatus(response));\n};\nexport const updateUserProfileStatus = profileStatus => async dispatch => {\n  let response = await profileAPI.updateUserProfileStatus(profileStatus);\n\n  if (response.resultCode === 0) {\n    dispatch(setUserProfileStatus(profileStatus));\n  }\n};","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/redux/profileReducer.js"],"names":["profileAPI","ADD_POST","SET_USER_PROFILE","SET_USER_PROFILE_STATUS","initialState","posts","id","name","status","message","likesCount","profile","profileStatus","profileReducer","state","action","type","newPost","length","newPostText","addPost","setUserProfile","setUserProfileStatus","getUserProfile","userId","dispatch","response","responseStatus","getUserProfileStatus","updateUserProfileStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST',\n\tSET_USER_PROFILE = 'SET-USER-PROFILE',\n\tSET_USER_PROFILE_STATUS = 'SET-USER-PROFILE-STATUS';\n\nlet initialState = {\n\tposts: [\n\t\t{id: 1, name: 'Anton', status: 'Coco', message: 'Hello Natasha!', likesCount: '10'},\n\t\t{id: 2, name: 'Natasha', status: 'Coco', message: 'Hello Coco!', likesCount: '15'},\n\t\t{id: 3, name: 'Masik', status: 'Dog', message: 'Meow!', likesCount: '999'},\n\t\t{id: 4, name: 'NewCat', status: 'Dog', message: 'Meow, blyat!', likesCount: '1'}\n\t],\n\tprofile: null,\n\tprofileStatus: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_POST:\n\t\t\tlet newPost = {\n\t\t\t\tid: state.posts[state.posts.length - 1].id + 1,\n\t\t\t\tname: 'Anonymus',\n\t\t\t\tstatus: 'noname',\n\t\t\t\tmessage: action.newPostText,\n\t\t\t\tlikesCount: 0\n\t\t\t};\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [...state.posts, newPost]\n\t\t\t};\n\t\tcase SET_USER_PROFILE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprofile: action.profile\n\t\t\t};\n\t\tcase SET_USER_PROFILE_STATUS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprofileStatus: action.profileStatus\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default profileReducer;\n\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setUserProfileStatus = (profileStatus) => ({type: SET_USER_PROFILE_STATUS, profileStatus});\n\n\nexport const getUserProfile = (userId) =>\n\tasync (dispatch) => {\n\t\tlet response = await profileAPI.getUserProfile(userId);\n\n\t\tdispatch(setUserProfile(response));\n\n\t\tlet responseStatus = await profileAPI.getUserProfileStatus(userId);\n\n\t\tdispatch(setUserProfileStatus(responseStatus));\n\t};\n\nexport const getUserProfileStatus = (userId) =>\n\tasync (dispatch) => {\n\t\tlet response = await profileAPI.getUserProfileStatus(userId)\n\n\t\tdispatch(setUserProfileStatus(response));\n\t};\n\nexport const updateUserProfileStatus = (profileStatus) =>\n\tasync (dispatch) => {\n\t\tlet response = await profileAPI.updateUserProfileStatus(profileStatus);\n\n\t\tif (response.resultCode === 0) {\n\t\t\tdispatch(setUserProfileStatus(profileStatus));\n\t\t}\n\t};"]},"metadata":{},"sourceType":"module"}