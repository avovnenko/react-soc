{"ast":null,"code":"import _defineProperty from \"/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst ADD_POST = 'ADD-POST',\n      UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nlet initialState = {\n  posts: [{\n    id: 1,\n    name: 'Anton',\n    status: 'Coco',\n    message: 'Hello Natasha!',\n    likesCount: '10'\n  }, {\n    id: 2,\n    name: 'Natasha',\n    status: 'Coco',\n    message: 'Hello Coco!',\n    likesCount: '15'\n  }, {\n    id: 3,\n    name: 'Masik',\n    status: 'Dog',\n    message: 'Meow!',\n    likesCount: '999'\n  }, {\n    id: 4,\n    name: 'NewCat',\n    status: 'Dog',\n    message: 'Meow, blyat!',\n    likesCount: '1'\n  }],\n  newPostText: 'Hello Redux'\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          name: 'Anonymus',\n          status: 'noname',\n          message: state.newPostText,\n          likesCount: 0\n        };\n\n        let stateCopy = _objectSpread({}, state);\n\n        stateCopy.posts = [...state.posts];\n        stateCopy.posts.push(newPost);\n        stateCopy.newPostText = '';\n        return stateCopy;\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        let stateCopy = _objectSpread({}, state);\n\n        stateCopy.newPostText = action.newText;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});","map":{"version":3,"sources":["/Users/avovnenko/PhpstormProjects/ReactApp/01-first-project/react-2/src/redux/profileReducer.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","id","name","status","message","likesCount","newPostText","profileReducer","state","action","type","newPost","stateCopy","push","newText","addPostActionCreator","updateNewPostTextActionCreator","text"],"mappings":";;;;;;AAAA,MAAMA,QAAQ,GAAG,UAAjB;AAAA,MACGC,oBAAoB,GAAG,sBAD1B;AAGA,IAAIC,YAAY,GAAG;AAClBC,EAAAA,KAAK,EAAE,CACN;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,OAAd;AAAuBC,IAAAA,MAAM,EAAE,MAA/B;AAAuCC,IAAAA,OAAO,EAAE,gBAAhD;AAAkEC,IAAAA,UAAU,EAAE;AAA9E,GADM,EAEN;AAACJ,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,SAAd;AAAyBC,IAAAA,MAAM,EAAE,MAAjC;AAAyCC,IAAAA,OAAO,EAAE,aAAlD;AAAiEC,IAAAA,UAAU,EAAE;AAA7E,GAFM,EAGN;AAACJ,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,OAAd;AAAuBC,IAAAA,MAAM,EAAE,KAA/B;AAAsCC,IAAAA,OAAO,EAAE,OAA/C;AAAwDC,IAAAA,UAAU,EAAE;AAApE,GAHM,EAIN;AAACJ,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,QAAd;AAAwBC,IAAAA,MAAM,EAAE,KAAhC;AAAuCC,IAAAA,OAAO,EAAE,cAAhD;AAAgEC,IAAAA,UAAU,EAAE;AAA5E,GAJM,CADW;AAOlBC,EAAAA,WAAW,EAAE;AAPK,CAAnB;;AAUA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKb,QAAL;AAAe;AACd,YAAIc,OAAO,GAAG;AACbV,UAAAA,EAAE,EAAE,CADS;AAEbC,UAAAA,IAAI,EAAE,UAFO;AAGbC,UAAAA,MAAM,EAAE,QAHK;AAIbC,UAAAA,OAAO,EAAEI,KAAK,CAACF,WAJF;AAKbD,UAAAA,UAAU,EAAE;AALC,SAAd;;AAOA,YAAIO,SAAS,qBAAOJ,KAAP,CAAb;;AACAI,QAAAA,SAAS,CAACZ,KAAV,GAAmB,CAAC,GAAGQ,KAAK,CAACR,KAAV,CAAnB;AACAY,QAAAA,SAAS,CAACZ,KAAV,CAAgBa,IAAhB,CAAqBF,OAArB;AACAC,QAAAA,SAAS,CAACN,WAAV,GAAwB,EAAxB;AACA,eAAOM,SAAP;AACA;;AACD,SAAKd,oBAAL;AAA2B;AAC1B,YAAIc,SAAS,qBAAOJ,KAAP,CAAb;;AACAI,QAAAA,SAAS,CAACN,WAAV,GAAwBG,MAAM,CAACK,OAA/B;AACA,eAAOF,SAAP;AACA;;AACD;AACC,aAAOJ,KAAP;AArBF;AAuBA,CAxBD;;AA0BA,eAAeD,cAAf;AAEA,OAAO,MAAMQ,oBAAoB,GAAG,OAAO;AAAEL,EAAAA,IAAI,EAAEb;AAAR,CAAP,CAA7B;AACP,OAAO,MAAMmB,8BAA8B,GAAIC,IAAD,KAAW;AAAEP,EAAAA,IAAI,EAAEZ,oBAAR;AAA8BgB,EAAAA,OAAO,EAAEG;AAAvC,CAAX,CAAvC","sourcesContent":["const ADD_POST = 'ADD-POST',\n\t  UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nlet initialState = {\n\tposts: [\n\t\t{id: 1, name: 'Anton', status: 'Coco', message: 'Hello Natasha!', likesCount: '10'},\n\t\t{id: 2, name: 'Natasha', status: 'Coco', message: 'Hello Coco!', likesCount: '15'},\n\t\t{id: 3, name: 'Masik', status: 'Dog', message: 'Meow!', likesCount: '999'},\n\t\t{id: 4, name: 'NewCat', status: 'Dog', message: 'Meow, blyat!', likesCount: '1'}\n\t],\n\tnewPostText: 'Hello Redux'\n};\n\nconst profileReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_POST: {\n\t\t\tlet newPost = {\n\t\t\t\tid: 5,\n\t\t\t\tname: 'Anonymus',\n\t\t\t\tstatus: 'noname',\n\t\t\t\tmessage: state.newPostText,\n\t\t\t\tlikesCount: 0\n\t\t\t};\n\t\t\tlet stateCopy = {...state};\n\t\t\tstateCopy.posts  = [...state.posts]\n\t\t\tstateCopy.posts.push(newPost);\n\t\t\tstateCopy.newPostText = '';\n\t\t\treturn stateCopy;\n\t\t}\n\t\tcase UPDATE_NEW_POST_TEXT: {\n\t\t\tlet stateCopy = {...state};\n\t\t\tstateCopy.newPostText = action.newText;\n\t\t\treturn stateCopy;\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default profileReducer;\n\nexport const addPostActionCreator = () => ({ type: ADD_POST });\nexport const updateNewPostTextActionCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text });"]},"metadata":{},"sourceType":"module"}